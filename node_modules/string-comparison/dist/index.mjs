var n=class g{static initParams(r,i){return[r.replace(/\s+/g,"").toLowerCase(),i.replace(/\s+/g,"").toLowerCase()]}static checkThanosType(r){if(typeof r!="string")throw new Error("first argument should be a string")}static checkRivalType(r){if(typeof r!="string")throw new Error("second argument should be a string")}static checkAvengersType(r){if(!Array.isArray(r))throw new Error("second argument should be an array of strings");if(r.find(i=>typeof i!="string"))throw new Error("second argument should be an array of strings")}sortMatch(r,i){return g.checkThanosType(r),g.checkAvengersType(i),i.map((t,e)=>({member:t,index:e,rating:this.similarity(r,t)})).sort((t,e)=>t.rating-e.rating)}};var p=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(!t.length&&!e.length)return 1;if(!t.length||!e.length)return 0;if(t===e)return 1;let a=Array.from(new Set(t.split("").concat(e.split("")))),c=this.stringVectorization(t.split(""),a),l=this.stringVectorization(e.split(""),a),[h,s,o]=[0,0,0];for(let m=0;m<c.length;++m)h+=c[m]*l[m],s+=c[m]*c[m],o+=l[m]*l[m];return s=Math.sqrt(s),o=Math.sqrt(o),Number(h)/(s*o)}distance(r,i){return 1-this.similarity(r,i)}stringVectorization(r,i){return i.map(t=>r.includes(t)?1:0)}};var y=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i),[a,c]=[t.length,e.length];if(!t.length&&!e.length||t===e)return 1;if(a<2||c<2)return 0;let l=new Map;for(let s=0;s<a-1;s++){let o=t.slice(s,s+2),m=l.has(o)?l.get(o)+1:1;l.set(o,m)}let h=0;for(let s=0;s<c-1;s++){let o=e.slice(s,s+2),m=l.has(o)?l.get(o):0;m>0&&(l.set(o,m-1),++h)}return 2*h/(a+c-2)}distance(r,i){return 1-this.similarity(r,i)}};var b=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(!t.length&&!e.length||t===e)return 1;let a=new Set(t.split("").concat(e.split(""))),c=new Set(t.split("").filter(l=>new Set(e).has(l)));return Number(c.size)/a.size}distance(r,i){return 1-this.similarity(r,i)}};var d=class extends n{similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return!t.length&&!e.length?1:1-Number(this.distance(t,e))/Math.max(t.length,e.length)}distance(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(t===e)return 0;let[a,c]=[t.length,e.length];if(!a)return c;if(!c)return a;let l=[...Array(a+1)].map(()=>Array(c+1).fill(0));for(let s=0;s<=a;++s)l[s][0]=s;for(let s=0;s<=c;++s)l[0][s]=s;let h;for(let s=1;s<=a;++s)for(let o=1;o<=c;++o)h=t[s-1]===e[o-1]?0:1,l[s][o]=Math.min(l[s-1][o]+1,l[s][o-1]+1,l[s-1][o-1]+h);return l[a][c]}};var T=class g extends n{static lcsLength(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i),[a,c]=[t.length,e.length],l=[...Array(a+1)].map(()=>Array(c+1).fill(0));for(let h=1;h<=a;++h)for(let s=1;s<=c;++s)l[h][s]=t[h-1]===e[s-1]?l[h-1][s-1]+1:Math.max(l[h][s-1],l[h-1][s]);return l[a][c]}similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return!t.length&&!e.length||t===e?1:2*g.lcsLength(t,e)/(t.length+e.length)}distance(r,i){let[t,e]=n.initParams(r,i);return t.length+e.length-2*g.lcsLength(t,e)}};var k=class g extends n{static lcsLength(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=[r.length,i.length],a=[...Array(t+1)].map(()=>Array(e+1).fill(0));for(let c=1;c<=t;++c)for(let l=1;l<=e;++l)a[c][l]=r[c-1]===i[l-1]?a[c-1][l-1]+1:Math.max(a[c][l-1],a[c-1][l]);return a[t][e]}similarity(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return!t.length&&!e.length||t===e?1:Number(g.lcsLength(t,e))/Math.max(t.length,e.length)}distance(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);return t===e?0:1-this.similarity(t,e)}};var x=class extends n{distance(r,i){n.checkThanosType(r),n.checkRivalType(i);let[t,e]=n.initParams(r,i);if(!t.length&&!e.length)return 1;if(!t.length||!e.length)return 0;if(t===e||t===e)return 1;let a=t.length,c=e.length;if(a===0||c===0)return 0;let l=Math.floor(Math.max(a,c)/2)-1,h=0,s=new Array(t.length).fill(0),o=new Array(e.length).fill(0);for(let u=0;u<a;u++)for(let f=Math.max(0,u-l);f<Math.min(c,u+l+1);f++)if(t[u]===e[f]&&o[f]===0){s[u]=1,o[f]=1,h++;break}if(h===0)return 0;let m=0,w=0;for(let u=0;u<a;u++)if(s[u]===1){for(;o[w]===0;)w++;t[u]!==e[w++]&&m++}return m/=2,(h/a+h/c+(h-m)/h)/3}similarity(r,i){let t=this.distance(r,i);if(t>.7){let e=0;for(let a=0;a<Math.min(r.length,i.length)&&r[a]===i[a];a++)e++;e=Math.min(4,e),t+=.1*e*(1-t)}return t}};var S=new p,A=new y,P=new b,j=new d,M=new T,L=M,v=new k,R=v,z=new x,C={cosine:S,diceCoefficient:A,jaccardIndex:P,levenshtein:j,lcs:M,longestCommonSubsequence:L,mlcs:v,metricLcs:R,jaroWinkler:z},et=C;export{et as default};
